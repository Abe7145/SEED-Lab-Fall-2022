# size of LCD screen
lcd_columns = 16
lcd_rows = 2

#initialize I2C bus and LCD class, clear LCD screen

i2c = board.I2C() # uses board.SCL and board.SDA
lcd = character_lcd.Character_LCD_RGB_I2C(i2c, lcd_columns, lcd_rows)
lcd.clear()





  
  
#C code for Arduino
#get the value that the pi sent to determine which quadrent(only 4 cases) it is in
void receiveData(int byteCount) {
  case = wire.read(); #variable case is what quadrent or which of the 4 cases the aruco marker is at
}





%Python code for pi-
%take the setpoint that the pi reads from the aruco marker and send it to arduino
def writeNumber(variableName):
  bus.write_byte(address, variableName)  % variableName is whatever Austin said the aruco marker number is
  return -1

writeNum(case) #writes on the LCD screen what case the marker is at

  
